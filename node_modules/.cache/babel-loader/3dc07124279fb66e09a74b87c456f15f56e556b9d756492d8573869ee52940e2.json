{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paket\\\\WebstormProjects\\\\h\\\\web_game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('/api/get').then(response => response.json()).then(response => setData([response.message1, response.message2]));\n  }, []);\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    async function setData() {\n      try {\n        const response = await fetch('/api/endpoint', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          },\n          body: JSON.stringify({\n            message3: `hello frontend and number ${value}`\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Успешный ответ сервера:', data);\n        } else {\n          console.error('Ошибка сервера:', response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n      }\n    }\n    setData();\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: !data ? \"Loading...\" : data[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: !data ? \"Loading...\" : data[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setValue(value + 1),\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fVZE68EpedlPCsvqBtaosMUCdSo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","data","setData","fetch","then","response","json","message1","message2","value","setValue","method","headers","body","JSON","stringify","message3","ok","console","log","error","status","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Paket/WebstormProjects/h/web_game/frontend/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\n\nfunction App() {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('/api/get').then(response => response.json()).then(response => setData([response.message1, response.message2]))\n  }, [])\n\n\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    async function setData() {\n      try {\n        const response = await fetch('/api/endpoint', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          },\n          body: JSON.stringify({ message3: `hello frontend and number ${value}` })\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Успешный ответ сервера:', data);\n        } else {\n          console.error('Ошибка сервера:', response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n      }\n    }\n\n    setData();\n  }, [value]);\n\n  return (\n    <div className=\"App\">\n      <h1>{!data ? \"Loading...\" : data[0]}</h1>\n      <h2>{!data ? \"Loading...\" : data[1]}</h2>\n      <button onClick={() => setValue(value + 1)}>{value}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,UAAU,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACC,QAAQ,IAAIH,OAAO,CAAC,CAACG,QAAQ,CAACE,QAAQ,EAAEF,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC;EACvH,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,eAAeO,OAAOA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAAC,eAAe,EAAE;UAC5CQ,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,QAAQ,EAAG,6BAA4BP,KAAM;UAAE,CAAC;QACzE,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACY,EAAE,EAAE;UACf,MAAMhB,IAAI,GAAG,MAAMI,QAAQ,CAACC,IAAI,EAAE;UAClCY,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAElB,IAAI,CAAC;QAC9C,CAAC,MAAM;UACLiB,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAEf,QAAQ,CAACgB,MAAM,EAAEhB,QAAQ,CAACiB,UAAU,CAAC;QACxE;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF;IAEAlB,OAAO,EAAE;EACX,CAAC,EAAE,CAACO,KAAK,CAAC,CAAC;EAEX,oBACEX,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAA0B,QAAA,EAAK,CAACvB,IAAI,GAAG,YAAY,GAAGA,IAAI,CAAC,CAAC;IAAC;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzC9B,OAAA;MAAA0B,QAAA,EAAK,CAACvB,IAAI,GAAG,YAAY,GAAGA,IAAI,CAAC,CAAC;IAAC;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzC9B,OAAA;MAAQ+B,OAAO,EAAEA,CAAA,KAAMnB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAe,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxD;AAEV;AAAC5B,EAAA,CAzCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}