{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paket\\\\WebstormProjects\\\\h\\\\web_game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { response } from \"express\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let arr = [];\n  useEffect(() => {\n    fetch('/api/get').then(response => response.json()).then(response => setData);\n  }, []);\n  getData();\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    async function SetData() {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", \"http://localhost:3001/api/endpoint\", true);\n      xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          if (xhr.status === 200) {\n            // Обработка успешного ответа от сервера\n            console.log(\"Успешный ответ сервера:\", xhr.responseText);\n          } else {\n            // Обработка ошибки от сервера\n            console.error(\"Ошибка сервера:\", xhr.status, xhr.statusText);\n          }\n        }\n      };\n      var data = {\n        message3: `hello frontend and number ${value}`\n      }; // данные для отправки на сервер\n      xhr.send(JSON.stringify(data));\n    }\n    SetData();\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: arr[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: arr[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setValue(value + 1),\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gbF3NQ1yhtOnn0At3US9TbT89iI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","response","jsxDEV","_jsxDEV","App","_s","arr","fetch","then","json","setData","getData","value","setValue","SetData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","status","console","log","responseText","error","statusText","data","message3","send","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Paket/WebstormProjects/h/web_game/frontend/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {response} from \"express\";\n\n\n\nfunction App() {\n  let arr = [];\n  useEffect(() => {\n    fetch('/api/get').then((response) => response.json()).then(response => setData)\n  }, [])\n\n  getData();\n\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    async function SetData() {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", \"http://localhost:3001/api/endpoint\", true);\n      xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          if (xhr.status === 200) {\n            // Обработка успешного ответа от сервера\n            console.log(\"Успешный ответ сервера:\", xhr.responseText);\n          } else {\n            // Обработка ошибки от сервера\n            console.error(\"Ошибка сервера:\", xhr.status, xhr.statusText);\n          }\n        }\n      };\n      var data = {message3: `hello frontend and number ${value}`}; // данные для отправки на сервер\n      xhr.send(JSON.stringify(data));\n    }\n\n    SetData();\n  }, [value])\n\n  return (\n    <div className=\"App\">\n      <h1>{arr[0]}</h1>\n      <h2>{arr[1]}</h2>\n      <button onClick={() => setValue(value + 1)}>{value}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,QAAQ,QAAO,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,GAAG,GAAG,EAAE;EACZP,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,UAAU,CAAC,CAACC,IAAI,CAAEP,QAAQ,IAAKA,QAAQ,CAACQ,IAAI,EAAE,CAAC,CAACD,IAAI,CAACP,QAAQ,IAAIS,OAAO,CAAC;EACjF,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,EAAE;EAET,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,eAAee,OAAOA,CAAA,EAAG;MACvB,IAAIC,GAAG,GAAG,IAAIC,cAAc,EAAE;MAC9BD,GAAG,CAACE,IAAI,CAAC,MAAM,EAAE,oCAAoC,EAAE,IAAI,CAAC;MAC5DF,GAAG,CAACG,gBAAgB,CAAC,cAAc,EAAE,gCAAgC,CAAC;MACtEH,GAAG,CAACI,kBAAkB,GAAG,YAAY;QACnC,IAAIJ,GAAG,CAACK,UAAU,KAAKJ,cAAc,CAACK,IAAI,EAAE;UAC1C,IAAIN,GAAG,CAACO,MAAM,KAAK,GAAG,EAAE;YACtB;YACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,GAAG,CAACU,YAAY,CAAC;UAC1D,CAAC,MAAM;YACL;YACAF,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEX,GAAG,CAACO,MAAM,EAAEP,GAAG,CAACY,UAAU,CAAC;UAC9D;QACF;MACF,CAAC;MACD,IAAIC,IAAI,GAAG;QAACC,QAAQ,EAAG,6BAA4BjB,KAAM;MAAC,CAAC,CAAC,CAAC;MAC7DG,GAAG,CAACe,IAAI,CAACC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAChC;IAEAd,OAAO,EAAE;EACX,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,oBACET,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/B,OAAA;MAAA+B,QAAA,EAAK5B,GAAG,CAAC,CAAC;IAAC;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACjBnC,OAAA;MAAA+B,QAAA,EAAK5B,GAAG,CAAC,CAAC;IAAC;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACjBnC,OAAA;MAAQoC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAsB,QAAA,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxD;AAEV;AAACjC,EAAA,CAxCQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}